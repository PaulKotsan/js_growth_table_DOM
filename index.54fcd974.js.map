{"mappings":"ACGA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAG/B,EAAO,SAAS,aAAa,CAAC,MAG9B,EAAe,SAAS,aAAa,CAAC,eACtC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAe,SAAS,aAAa,CAAC,kBAE5C,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACE,IAAM,EAAS,EAAM,SAAS,CAAC,GAE/B,CAAA,EAAgB,QAAQ,CAAG,CAAA,EAI3B,IAAK,IAFC,EAAe,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAEtC,EAAI,EAAG,EAAI,EAAc,IAGhC,AAFgB,EAAO,UAAU,CAAC,GAE1B,WAAW,CAAC,EAGlB,CAAA,EAAM,IAAI,CAAC,MAAM,EAAI,IACvB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,SAAC,CAA3C,EACE,EAAM,SAAS,CAAC,IAEhB,EAAa,QAAQ,CAAG,CAAA,EAEE,IAAtB,EAAM,IAAI,CAAC,MAAM,EACnB,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF,GAEA,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACO,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAMI,EANC,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,E,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAa,QAAQ,CAAG,CAAA,EAEpB,CAAA,AAAa,OAAb,CAAA,EAAA,EAAM,IAAI,CAAC,EAAE,AAAF,GAAX,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAe,KAAK,CAAC,MAAM,AAAN,GAAU,IACjC,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACO,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAMI,EANC,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAU,QAAQ,CAAG,CAAA,EAEjB,CAAA,AAAa,OAAb,CAAA,EAAA,EAAM,IAAI,CAAC,EAAE,AAAF,GAAX,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAe,KAAK,CAAC,MAAM,AAAN,IAAW,GAClC,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// Access table\nvar table = document.querySelector(\".field\");\n// Use this to for simplicity\nvar cube = document.createElement(\"td\");\n// Access each button\nvar addRowButton = document.querySelector(\".append-row\");\nvar removeRowButton = document.querySelector(\".remove-row\");\nvar addColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\naddRowButton.addEventListener(\"click\", function(e) {\n    var newRow = table.insertRow(-1);\n    removeRowButton.disabled = false;\n    var columntCount = table.rows[0].cells.length;\n    for(var i = 0; i < columntCount; i++){\n        var newCell = newRow.insertCell(0);\n        newCell.appendChild(cube);\n    }\n    if (table.rows.length >= 10) addRowButton.disabled = true;\n});\nremoveRowButton.addEventListener(\"click\", function(e) {\n    table.deleteRow(-1);\n    addRowButton.disabled = false;\n    if (table.rows.length === 2) removeRowButton.disabled = true;\n});\naddColumn.addEventListener(\"click\", function(e) {\n    var _table_rows_;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.insertCell(0);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    removeColumn.disabled = false;\n    if (((_table_rows_ = table.rows[0]) === null || _table_rows_ === void 0 ? void 0 : _table_rows_.cells.length) >= 10) addColumn.disabled = true;\n});\nremoveColumn.addEventListener(\"click\", function(e) {\n    var _table_rows_;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.deleteCell(-1);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    addColumn.disabled = false;\n    if (((_table_rows_ = table.rows[0]) === null || _table_rows_ === void 0 ? void 0 : _table_rows_.cells.length) === 2) removeColumn.disabled = true;\n});\n\n//# sourceMappingURL=index.54fcd974.js.map\n","'use strict';\n\n// Access table\nconst table = document.querySelector('.field');\n\n// Use this to for simplicity\nconst cube = document.createElement('td');\n\n// Access each button\nconst addRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst addColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\naddRowButton.addEventListener('click', (e) => {\n  const newRow = table.insertRow(-1);\n\n  removeRowButton.disabled = false;\n\n  const columntCount = table.rows[0].cells.length;\n\n  for (let i = 0; i < columntCount; i++) {\n    const newCell = newRow.insertCell(0);\n\n    newCell.appendChild(cube);\n  }\n\n  if (table.rows.length >= 10) {\n    addRowButton.disabled = true;\n  }\n});\n\nremoveRowButton.addEventListener('click', (e) => {\n  table.deleteRow(-1);\n\n  addRowButton.disabled = false;\n\n  if (table.rows.length === 2) {\n    removeRowButton.disabled = true;\n  }\n});\n\naddColumn.addEventListener('click', (e) => {\n  for (const row of table.rows) {\n    row.insertCell(0);\n  }\n\n  removeColumn.disabled = false;\n\n  if (table.rows[0]?.cells.length >= 10) {\n    addColumn.disabled = true;\n  }\n});\n\nremoveColumn.addEventListener('click', (e) => {\n  for (const row of table.rows) {\n    row.deleteCell(-1);\n  }\n\n  addColumn.disabled = false;\n\n  if (table.rows[0]?.cells.length === 2) {\n    removeColumn.disabled = true;\n  }\n});\n"],"names":["table","document","querySelector","cube","createElement","addRowButton","removeRowButton","addColumn","removeColumn","addEventListener","e","newRow","insertRow","disabled","columntCount","rows","cells","length","i","newCell","insertCell","appendChild","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_table_rows_","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell"],"version":3,"file":"index.54fcd974.js.map"}